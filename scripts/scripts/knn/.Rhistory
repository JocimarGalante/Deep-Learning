clear
getwd()
clear()
cls()
cls
installed.packages("e1071")
install.packages("e1071")
install.packages("caret")
library("caret")
setwd("/Users/cassi/dev/_estudos/pos-iaa/IAA008-aprendizado-maquina/bases-de-dados/06-veiﾌ…ulos")
data <- read.csv("6-veiculos.csv")
View(data)
data$a <- NULL
any(is.na(data))
preproc_center_scale <- preProcess(data, method=c("center", "scale"))
normalized_data <- predict(preproc_center_scale, data)
View(normalized_data)
set.seed(202493)
nrows(normalized_data)
nrow(normalized_data)
nrow(data)
any(is.na(normalized_data))
ind <- createDataPartition(normalized_data$tipo, p=0.8, list=F)
nrow(ind
)
train <- normalized_data[ind,]
test <- normalized_data[-ind,]
tuneGrid <- expand.grid(k=c(1, 3, 5, 7, 9))
set.seed(202493)
set.seed(202493)
tune_grid <- expand.grid(k=c(1, 3, 5, 7, 9))
set.seed(202493)
knn <- train(tipo ~ ., data=train, method="knn", tuneGrid=tune_grid)
knn <- train(tipo ~ ., data=train, method="knn", tuneGrid=tune_grid)
knn
train <- data[ind, ]
test <- data[-ind, ]
knn <- train(tipo ~ ., data=train, method="knn", tuneGrid=tune_grid)
knn
View(train)
train <- normalized_data[ind, ]
test <- normalized_data[-ind, ]
set.seed(202493)
knn <- train(tipo ~ ., data=train, method="knn", tuneGrid=tune_grid)
knn
predict.knn <- predict(knn, test)
confusionMatrix(predict.knn, as.factor(test$tipo))
setwd("/Users/cassi/dev/_estudos/pos-iaa/IAA008-aprendizado-maquina/bases-de-dados/10-diabetes")
data <- read.csv("10-diabetes.csv")
View(data)
data$num <- NULL
any(is.na(data))
preproc_center_scale <- preProcess(data, method=c("center", "scale"))
normalized_data <- predict(preproc_center_scale, data)
View(normalized_data)
set.seed(202493)
ind <- createDataPartition(normalized_data$diabetes, p=0.8, list=FALSE)
train <- normalized_data[ind, ]
test <- normalized_data[-ind,]
nrow(normalized_data)
nrow(train)
nrow(test)
tune_grid <- expand.grid(k=c(1, 3, 5, 7, 9))
set.seed(202493)
knn <- train(diabets ~ ., data=train, method="nkk", tuneGrid=tune_grid)
knn <- train(diabetes ~ ., data=train, method="nkk", tuneGrid=tune_grid)
knn <- train(diabetes ~ ., data=train, method="knn", tuneGrid=tune_grid)
knn
predict.knn <- predict(knn, test)
confusionMatrix(predict.knn, as.factor(test$diabetes))
> setwd("/Users/cassi/dev/_estudos/pos-iaa/IAA008-aprendizado-maquina/bases-de-dados/06-veiﾌ…ulos")
setwd("/Users/cassi/dev/_estudos/pos-iaa/IAA008-aprendizado-maquina/bases-de-dados/06-veiﾌ…ulos")
data <- read.csv("6-veiculos.csv")
View(data)
data$a <- NULL
any(is.na(data))
preproc_center_scale <- preProcess(data, method=c("center", "scale"))
normalized_data <- predict(preproc_center_scale, data)
set.seed(202493)
ind <- createDataPartition(normalized_data$tipo, p=0.8, list=F)
train <- normalized_data[ind,]
test <- normalized_data[-ind,]
tune_grid <- expand.grid(k=c(1, 3, 5, 7, 9))
set.seed(202493)
knn <- train(tipo ~ ., data=train, method="knn", tuneGrid=tune_grid)
knn
predict.knn <- predict(knn, test)
confusionMatrix(predict.knn, as.factor(test$tipo))
library(Metrics)
setwd("/Users/cassi/dev/_estudos/pos-iaa/IAA008-aprendizado-maquina/bases-de-dados/09-admissaﾌバ")
data <- read.csv("9-admissao.csv")
data$num <- NULL
any(is.na(data))
preproc_center_scale <- preProcess(data, method=c("center", "scale"))
normalized_data <- predict(preproc_center_scale, data)
View(normalized_data)
target_data <- data[["ChanceOfAdmit"]]
predictors <- data[, colnames(data) != "ChanceOfAdmit"]
View(target_data)
View(predictors)
preproc_center_scale <- preProcess(predictors, method=c("center", "scale"))
normalized_predictors <- predict(preproc_center_scale, predictors)
normalized_data <- cbind(normalized_predictors, target_data)
View(normalized_data)
set.seed(202493)
names(normalized_data)[names(normalized_data) == "target_data"] <- "ChanceOfAdmit"
set.seed(202493)
ind <- createDataPartition(normalized_data$ChanceOfAdmit, p=0.8, list=FALSE)
train <- normalized_data[ind,]
test <- normalized_data[-ind,]
nrow(normalized_data)
nrow(train)
nrow(test)
tune_grid <- expand.grid(k=c(1, 3, 5, 7, 9))
set.seed(202493)
knn <- train(ChanceOfAdmit ~ ., data=train, method="knn", tuneGrid=tune_grid)
knn
predict.knn <- predict(knn, test)
rmse(test$ChanceOfAdmit, predict.knn)
r2 <- function(predicted, observed) {
return (1 - (sum((predicted - observed) ^ 2) / sum((observed - mean(observed)) ^ 2)))
}
r2(predict.knn, test$ChanceOfAdmit)
syx <- function(predicted, observed) {
n <- length(observed)
syx <- sqrt(sum((observed - predicted)^2) / (n - 2))
return(syx)
}
syx(predict.knn, test$ChanceOfAdmit)
library(stats)
cor(test$ChanceOfAdmit, predict.knn)
mae(test$ChanceOfAdmit, predict.knn)
setwd("/Users/cassi/dev/_estudos/pos-iaa/IAA008-aprendizado-maquina/bases-de-dados/05-biomassa")
data <- read.csv("5-biomassa.csv")
View(data)
any(is.na(data))
target_data <- data[["biomassa"]]
predictors <- data[, colnames(data) != "biomassa"]
preproc_center_scale <- preProcess(predictors, method=c("center", "scale"))
normalized_predictors <- predict(preproc_center_scale, predictors)
normalized_data <- cbind(normalized_predictors, target_data)
names(normalized_data)[names(normalized_data) == "target_data"] <- "biomassa"
View(normalized_data)
set.seed(202493)
ind <- createDataPartition(normalized_data$ChanceOfAdmit, p=0.8, list=FALSE)
set.seed(202493)
ind <- createDataPartition(normalized_data$biomassa, p=0.8, list=FALSE)
train <- normalized_data[ind,]
test <- normalized_data[-ind,]
tune_grid <- expand.grid(k=c(1, 3, 5, 7, 9))
set.seed(202493)
knn <- train(ChanceOfAdmit ~ ., data=train, method="knn", tuneGrid=tune_grid)
set.seed(202493)
ind <- createDataPartition(normalized_data$biomassa, p=0.8, list=FALSE)
train <- normalized_data[ind,]
test <- normalized_data[-ind,]
tune_grid <- expand.grid(k=c(1, 3, 5, 7, 9))
set.seed(202493)
knn <- train(biomassa ~ ., data=train, method="knn", tuneGrid=tune_grid)
knn
predict.knn <- predict(knn, test)
rmse(test$ChanceOfAdmit, predict.knn)
rmse(test$biomassa, predict.knn)
data <- read.csv("5-biomassa.csv")
View(data)
any(is.na(data))
nrow(data)
target_data <- data[["biomassa"]]
predictors <- data[, colnames(data) != "biomassa"]
nrow(target_data)
nrow(predictors)
preproc_center_scale <- preProcess(predictors, method=c("center", "scale"))
normalized_predictors <- predict(preproc_center_scale, predictors)
normalized_data <- cbind(normalized_predictors, target_data)
names(normalized_data)[names(normalized_data) == "target_data"] <- "biomassa"
nrow(normalized_data)
set.seed(202493)
ind <- createDataPartition(normalized_data$biomassa, p=0.8, list=FALSE)
train <- normalized_data[ind,]
test <- normalized_data[-ind,]
tune_grid <- expand.grid(k=c(1, 3, 5, 7, 9))
nrow(train)
nrow(test)
set.seed(202493)
knn <- train(biomassa ~ ., data=train, method="knn", tuneGrid=tune_grid)
knn
predict.knn <- predict(knn, test)
View(test)
rmse(test$biomassa, predict.knn)
r2(predict.rna, test$biomassa)
r2(predict.knn, test$biomassa)
syx(predict.knn, test$biomassa)
cor(test$biomassa, predict.knn)
mae(test$biomassa, predict.knn)
r2(predict.knn, test$biomassa)
View(r2)
