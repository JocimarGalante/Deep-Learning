install.packages("e1071")
install.packages("caret")
library("caret")
setwd("/Users/cassi/dev/_estudos/pos-iaa/IAA008-aprendizado-maquina/bases-de-dados/06-veículos")
data <- read.csv("6-veiculos.csv")
View(data)
data$a <- NULL
any(is.na(data))
preproc_center_scale <- preProcess(data, method=c("center", "scale"))
normalized_data <- predict(preproc_center_scale, data)
View(normalized_data)
set.seed(202493)
ind <- createDataPartition(normalized_data$tipo, p=0.8, list=F)
train <- normalized_data[ind,]
test <- normalized_data[-ind,]
set.seed(202493)
rna <- train(tipo ~ ., data=train, method="nnet", trace=FALSE)
rna
rna
set.seed(202493)
ind <- createDataPartition(normalized_data$tipo, p=0.8, list=F)
train <- normalized_data[ind,]
test <- normalized_data[-ind,]
grid <- expand.grid(size = seq(from = 1, to = 45, by = 5), decay = seq(from = 0.1, to = 0.9, by = 0.3))
set.seed(202493)
rna <- train(
form= tipo ~ .,
data=train,
method="nnet",
tuneGrid=tune_grid,
maxit=2000,
trace=FALSE
)
tune_grid <- expand.grid(size = seq(from = 1, to = 45, by = 5), decay = seq(from = 0.1, to = 0.9, by = 0.3))
set.seed(202493)
rna <- train(
+     form= tipo ~ .,
rna <- train(
+     form=tipo ~ .,
rna <- train(
+     tipo ~ .,
+     data=train,
train(form=tipo ~ ., data=train, method="nnet", tuneGrid=tune_grid, maxit=2000, trace=FALSE)
rna
rna
rna <- train(form=tipo ~ ., data=train, method="nnet", tuneGrid=tune_grid, maxit=2000, trace=FALSE)
rna
predict.rna <- predict(rna, test)
confusionMatrix(predict.knn, as.factor(test$tipo))
confusionMatrix(predict.rna, as.factor(test$tipo))
set.seed(202493)
train_control <- trainControl(method = "cv", number = 10)
rna <- train(form= tipo ~ ., data=train, method="nnet", trControl=train_control tuneGrid=tune_grid, maxit=2000, trace=FALSE)
rna <- train(form= tipo ~ ., data=train, method="nnet", trControl=train_control, tuneGrid=tune_grid, maxit=2000, trace=FALSE)
rna
set.seed(202493)
rna <- train(form= tipo ~ ., data=train, method="nnet", trControl=train_control, tuneGrid=tune_grid, maxit=2000, trace=FALSE)
rna
predict.rna <- predict(rna, test)
confusionMatrix(predict.rna, as.factor(test$tipo))
setwd("/Users/cassi/dev/_estudos/pos-iaa/IAA008-aprendizado-maquina/bases-de-dados/10-diabetes")
data <- read.csv("10-diabetes.csv")
View(data)
any(is.na(data))
data$num <- NULL
preproc_center_scale <- preProcess(data, method=c("center", "scale"))
normalized_data <- predict(preproc_center_scale, data)
set.seed(202493)
ind <- createDataPartition(normalized_data$diabetes, p=0.8, list=FALSE)
train <- normalized_data[ind,]
test <- normalized_data[-ind,]
tune_grid <- expand.grid(size = seq(from = 1, to = 45, by = 5), decay = seq(from = 0.1, to = 0.9, by = 0.3))
rna <- train(form=diabetes ~ ., data=train, method="nnet", tuneGrid=tune_grid, maxit=2000, trace=FALSE)
rna
set.seed(202493)
rna <- train(form=diabetes ~ ., data=train, method="nnet", tuneGrid=tune_grid, maxit=2000, trace=FALSE)
rna
predict.rna <- predict(rna, test)
confusionMatrix(predict.rna, as.factor(test$diabetes))
set.seed(202493)
train_control <- trainControl(method = "cv", number = 10)
rna <- train(form= diabetes ~ ., data=train, method="nnet", trControl=train_control, tuneGrid=tune_grid, maxit=2000, trace=FALSE)
rna
predict.rna <- predict(rna, test)
confusionMatrix(predict.rna, as.factor(test$diabetes))
setwd("/Users/cassi/dev/_estudos/pos-iaa/IAA008-aprendizado-maquina/bases-de-dados/09-admissão")
data <- read.csv("9-admissao.csv")
View(data)
data$num <- NULL
target_data <- data[["ChanceOfAdmit"]]
predictors <- data[, colnames(data) != "ChanceOfAdmit"]
preproc_center_scale <- preProcess(predictors, method=c("center", "scale"))
normalized_predictors <- predict(preproc_center_scale, predictors)
normalized_data <- cbind(normalized_predictors, target_data)
names(normalized_data)[names(normalized_data) == "target_data"] <- "ChanceOfAdmit"
View(normalized_data)
install.packages("mlbench") install.packages("mice") library(mlbench) library(caret)
install.packages("mlbench")
install.packages("mice")
library(mlbench)
library(caret)
library(mice)
set.seed(202493)
ind <- createDataPartition(normalized_data$ChanceOfAdmit, p=0.8, list=FALSE)
train <- normalized_data[ind,]
test <- normalized_data[-ind,]
nrow(data)
nrow(normalized_data)
nrow(train)
nrow(test)
set.seed(202493)
ind <- createDataPartition(normalized_data$ChanceOfAdmit, p=0.8, list=FALSE)
train <- normalized_data[ind,]
test <- normalized_data[-ind,]
tune_grid <- expand.grid(size = seq(from = 1, to = 45, by = 5), decay = seq(from = 0.1, to = 0.9, by = 0.3))
nrow(test)
set.seed(202493)
rna <- train(form=ChanceOfAdmit ~ ., data=train, method="nnet", tuneGrid=tune_grid, linout=T, MaxNWts=10000, maxit=2000, trace=F)
rna
predict.rna <- predict(rna, test)
r2 <- function(predicted, observed) {
return (1 - (sum((predicted - observed) ^ 2) / sum((observed - mean(observed)) ^ 2)))
}
syx <- function(predicted, observed) {
n <- length(observed)
syx <- sqrt(sum((observed - predicted)^2) / (n - 2))
return(syx)
}
rmse(test$biomassa, predict.knn)
rmse(test$ChanceOfAdmit, predict.rna)
install.packages("e1071")
install.packages("caret")
install.packages("mlbench")
install.packages("mice")
library(mlbench)
library("caret")
library(Metrics)
library(stats)
library(mice)
rmse(test$ChanceOfAdmit, predict.rna)
library(Metrics)
rmse
rmse(test$ChanceOfAdmit, predict.rna)
r2(predict.knn, test$ChanceOfAdmit)
r2(predict.rna, test$ChanceOfAdmit)
syx(predict.rna, test$ChanceOfAdmit)
cor(test$ChanceOfAdmit, predict.rna)
mae(test$ChanceOfAdmit, predict.rna)
set.seed(202493)
train_control <- trainControl(method = "cv", number = 10)
install.packages("e1071")
install.packages("caret")
install.packages("mlbench")
install.packages("mice")
library(mlbench)
library("caret")
library(Metrics)
library(stats)
library(mice)
set.seed(202493)
train_control <- trainControl(method = "cv", number = 10)
rna <- train(form=ChanceOfAdmit ~ ., data=train, method="nnet", trControl=train_control, tuneGrid=tune_grid, maxit=2000, trace=FALSE)
rna
predict.rna <- predict(rna, test)
rmse(test$ChanceOfAdmit, predict.knn)
rmse(test$ChanceOfAdmit, predict.rna)
r2(predict.rna, test$ChanceOfAdmit)
syx(predict.rna, test$ChanceOfAdmit)
cor(test$ChanceOfAdmit, predict.rna)
mae(test$ChanceOfAdmit, predict.rna)
setwd("/Users/cassi/dev/_estudos/pos-iaa/IAA008-aprendizado-maquina/bases-de-dados/05-biomassa")
data <- read.csv("5-biomassa.csv")
View(data)
any(is.na(data))
target_data <- data[["biomassa"]]
predictors <- data[, colnames(data) != "biomassa"]
preproc_center_scale <- preProcess(predictors, method=c("center", "scale"))
normalized_predictors <- predict(preproc_center_scale, predictors)
normalized_data <- cbind(normalized_predictors, target_data)
names(normalized_data)[names(normalized_data) == "target_data"] <- "biomassa"
set.seed(202493)
ind <- createDataPartition(normalized_data$biomassa, p=0.8, list=FALSE)
train <- normalized_data[ind,]
test <- normalized_data[-ind,]
tune_grid <- expand.grid(size = seq(from = 1, to = 45, by = 5), decay = seq(from = 0.1, to = 0.9, by = 0.3))
set.seed(202493)
rna <- train(form=biomassa ~ ., data=train, method="nnet", tuneGrid=tune_grid, linout=T, MaxNWts=10000, maxit=2000, trace=F)
rna
predict.rna <- predict(rna, test)
rmse(test$biomassa, predict.rna)
r2(predict.rna, test$biomassa)
syx(predict.rna, test$biomassa)
cor(test$biomassa, predict.rna)
mae(test$biomassa, predict.rna)
set.seed(202493)
train_control <- trainControl(method = "cv", number = 10)
rna <- train(form=biomassa ~ ., data=train, method="nnet", trControl=train_control, tuneGrid=tune_grid, maxit=2000, trace=FALSE)
rna
predict.rna <- predict(rna, test)
rmse(test$biomassa, predict.rna)
# 321.6455
r2(predict.rna, test$biomassa)
# 0.8645137
syx(predict.rna, test$biomassa)
# 327.1441
cor(test$biomassa, predict.rna) # Pearson (library stats)
# 0.9753561
mae(test$biomassa, predict.rna)
# 165.1712
set.seed(202493)
train_control <- trainControl(method = "cv", number = 10)
rna <- train(form=biomassa ~ ., data=train, method="nnet", trControl=train_control, tuneGrid=tune_grid, maxit=2000, trace=FALSE)
rna
predict.rna <- predict(rna, test)
rmse(test$biomassa, predict.rna)
r2(predict.rna, test$biomassa)
syx(predict.rna, test$biomassa)
cor(test$biomassa, predict.rna)
mae(test$biomassa, predict.rna)
setwd("/Users/cassi/dev/_estudos/pos-iaa/IAA008-aprendizado-maquina/bases-de-dados/05-biomassa")
data <- read.csv("5-biomassa.csv")
View(data)
any(is.na(data))
target_data <- data[["biomassa"]]
predictors <- data[, colnames(data) != "biomassa"]
preproc_center_scale <- preProcess(predictors, method=c("center", "scale"))
library("caret")
library(Metrics)
library(stats)
target_data <- data[["biomassa"]]
predictors <- data[, colnames(data) != "biomassa"]
preproc_center_scale <- preProcess(predictors, method=c("center", "scale"))
normalized_predictors <- predict(preproc_center_scale, predictors)
normalized_data <- cbind(normalized_predictors, target_data)
names(normalized_data)[names(normalized_data) == "target_data"] <- "biomassa"
View(normalized_data)
set.seed(202493)
ind <- createDataPartition(normalized_data$biomassa, p=0.8, list=FALSE)
train <- normalized_data[ind,]
test <- normalized_data[-ind,]
tune_grid <- expand.grid(size = seq(from = 1, to = 45, by = 5), decay = seq(from = 0.1, to = 0.9, by = 0.2))
set.seed(202493)
rna <- train(form=biomassa ~ ., data=train, method="nnet", tuneGrid=tune_grid, linout=T, MaxNWts=10000, maxit=2000, trace=F)
set.seed(202493)
train_control <- trainControl(method = "cv", number = 10)
rna <- train(form=biomassa ~ ., data=train, method="nnet", trControl=train_control, tuneGrid=tune_grid, linout=T, maxit=2000, trace=FALSE)
rna
predict.rna <- predict(rna, test)
r2 <- function(predicted, observed) {
return (1 - (sum((predicted - observed) ^ 2) / sum((observed - mean(observed)) ^ 2)))
}
syx <- function(predicted, observed) {
n <- length(observed)
syx <- sqrt(sum((observed - predicted)^2) / (n - 2))
return(syx)
}
rmse(test$biomassa, predict.rna)
r2(predict.rna, test$biomassa)
# -0.2027258
syx(predict.rna, test$biomassa)
# 974.7084
cor(test$biomassa, predict.rna)
# -0.9600623
mae(test$biomassa, predict.rna)
install.packages("e1071")
install.packages("caret")
library("caret")
setwd("/Users/cassi/dev/_estudos/pos-iaa/IAA008-aprendizado-maquina/bases-de-dados/06-veículos")
data <- read.csv("6-veiculos.csv")
View(data)
data$a <- NULL
any(is.na(data))
# FALSE
preproc_center_scale <- preProcess(data, method=c("center", "scale"))
normalized_data <- predict(preproc_center_scale, data)
# Dados normalizados com média centralizada em 0
set.seed(202493)
ind <- createDataPartition(normalized_data$tipo, p=0.8, list=F)
train <- normalized_data[ind,]
test <- normalized_data[-ind,]
set.seed(202493)
rna <- train(form= tipo ~ ., data=train, method="nnet", maxit=2000, trace=FALSE)
rna
predict.rna <- predict(rna, test)
confusionMatrix(predict.rna, as.factor(test$tipo))
set.seed(202493)
train_control <- trainControl(method = "cv", number = 10)
rna <- train(form= tipo ~ ., data=train, method="nnet", trControl=train_control, maxit=2000, trace=FALSE)
rna
predict.rna <- predict(rna, test)
confusionMatrix(predict.rna, as.factor(test$tipo))
tune_grid <- expand.grid(size = seq(from = 1, to = 45, by = 5), decay = seq(from = 0.1, to = 0.9, by = 0.3))
set.seed(202493)
train_control <- trainControl(method = "cv", number = 10)
rna <- train(form= tipo ~ ., data=train, method="nnet", trControl=train_control, tuneGrid=tune_grid, maxit=2000, trace=FALSE)
rna
predict.rna <- predict(rna, test)
confusionMatrix(predict.rna, as.factor(test$tipo))
setwd("/Users/cassi/dev/_estudos/pos-iaa/IAA008-aprendizado-maquina/bases-de-dados/10-diabetes")
data <- read.csv("10-diabetes.csv")
View(data)
data$num <- NULL
any(is.na(data))
# FALSE
preproc_center_scale <- preProcess(data, method=c("center", "scale"))
normalized_data <- predict(preproc_center_scale, data)
# Dados normalizados com média centralizada em 0
set.seed(202493)
ind <- createDataPartition(normalized_data$diabetes, p=0.8, list=FALSE)
train <- normalized_data[ind,]
test <- normalized_data[-ind,]
set.seed(202493)
rna <- train(form= diabetes ~ ., data=train, method="nnet", maxit=2000, trace=FALSE)
rna
predict.rna <- predict(rna, test)
confusionMatrix(predict.rna, as.factor(test$diabetes))
set.seed(202493)
train_control <- trainControl(method = "cv", number = 10)
rna <- train(form= diabetes ~ ., data=train, method="nnet", trControl=train_control, maxit=2000, trace=FALSE)
rna
predict.rna <- predict(rna, test)
confusionMatrix(predict.rna, as.factor(test$diabetes))
setwd("/Users/cassi/dev/_estudos/pos-iaa/IAA008-aprendizado-maquina/bases-de-dados/09-admissão")
data <- read.csv("9-admissao.csv")
View(data)
data$num <- NULL
any(is.na(data))
# FALSE
target_data <- data[["ChanceOfAdmit"]]
predictors <- data[, colnames(data) != "ChanceOfAdmit"]
preproc_center_scale <- preProcess(predictors, method=c("center", "scale"))
normalized_predictors <- predict(preproc_center_scale, predictors)
normalized_data <- cbind(normalized_predictors, target_data)
names(normalized_data)[names(normalized_data) == "target_data"] <- "ChanceOfAdmit"
set.seed(202493)
ind <- createDataPartition(normalized_data$ChanceOfAdmit, p=0.8, list=FALSE)
train <- normalized_data[ind,]
test <- normalized_data[-ind,]
set.seed(202493)
rna <- train(form=ChanceOfAdmit ~ ., data=train, method="nnet", tuneGrid=tune_grid, linout=T, MaxNWts=10000, maxit=2000, trace=F)
rna
predict.rna <- predict(rna, test)
rmse(test$ChanceOfAdmit, predict.rna)
library(Metrics)
library(stats)
library(mice)
library(mlbench)
rmse(test$ChanceOfAdmit, predict.rna)
r2(predict.rna, test$ChanceOfAdmit)
syx(predict.rna, test$ChanceOfAdmit)
cor(test$ChanceOfAdmit, predict.rna) # Pearson (library stats)
mae(test$ChanceOfAdmit, predict.rna)
set.seed(202493)
train_control <- trainControl(method = "cv", number = 10)
rna <- train(form=ChanceOfAdmit ~ ., data=train, method="nnet", trControl=train_control, maxit=2000, trace=FALSE)
rna
predict.rna <- predict(rna, test)
rmse(test$ChanceOfAdmit, predict.rna)
r2(predict.rna, test$ChanceOfAdmit)
syx(predict.rna, test$ChanceOfAdmit)
cor(test$ChanceOfAdmit, predict.rna) # Pearson (library stats)
mae(test$ChanceOfAdmit, predict.rna)
setwd("/Users/cassi/dev/_estudos/pos-iaa/IAA008-aprendizado-maquina/bases-de-dados/05-biomassa")
data <- read.csv("5-biomassa.csv")
View(data)
any(is.na(data))
# FALSE
target_data <- data[["biomassa"]]
predictors <- data[, colnames(data) != "biomassa"]
preproc_center_scale <- preProcess(predictors, method=c("center", "scale"))
normalized_predictors <- predict(preproc_center_scale, predictors)
normalized_data <- cbind(normalized_predictors, target_data)
names(normalized_data)[names(normalized_data) == "target_data"] <- "biomassa"
set.seed(202493)
ind <- createDataPartition(normalized_data$biomassa, p=0.8, list=FALSE)
train <- normalized_data[ind,]
test <- normalized_data[-ind,]
set.seed(202493)
rna <- train(form=biomassa ~ ., data=train, method="nnet", tuneGrid=tune_grid, linout=T, MaxNWts=10000, maxit=2000, trace=F)
rna
predict.rna <- predict(rna, test)
rmse(test$biomassa, predict.rna)
r2(predict.rna, test$biomassa)
syx(predict.rna, test$biomassa)
cor(test$biomassa, predict.rna) # Pearson (library stats)
mae(test$biomassa, predict.rna)
set.seed(202493)
train_control <- trainControl(method = "cv", number = 10)
rna <- train(form=biomassa ~ ., data=train, method="nnet", trControl=train_control, linout=T, maxit=2000, trace=FALSE)
rna
predict.rna <- predict(rna, test)
rmse(test$biomassa, predict.rna)
r2(predict.rna, test$biomassa)
syx(predict.rna, test$biomassa)
cor(test$biomassa, predict.rna)
mae(test$biomassa, predict.rna)
