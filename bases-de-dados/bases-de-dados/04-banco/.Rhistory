getwd()
setwd('/Users/cassi/dev/_estudos/pos-iaa/IAA008-aprendizado-maquina')
getwd()
install.packages("e1071")
installed.packages("caret")
install.packages("caret")
library("caret")
data("iris")
dados <- iris
View(dados)
set.seed(202493)
indices <- createDataPartition(dados$Species, p=0.8, list=F)
indices
treino <- dados[indices,]
teste <- dados[-indices,]
set.seed(202493)
rna <- train(Species ~ ., data=treino, method="nnet", trace=F)
rna
predicoes.rna <- predict(rna, teste)
confusionMatrix(predicoes.rna, teste$Species)
install.packages("mlbench")
install.packages("mice")
library(mlbench)
library(mice)
setwd("/Users/cassi/dev/_estudos/pos-iaa/IAA008-aprendizado-maquina/bases-de-dados/01-cancer-de-mama")
temp_dados <- read.csv("1-cancer-de-mama-dados.csv")
View(temp_dados)
temp_dados$Id <- NULL
imp <- mice(temp_dados)
dados <- complete(imp,1)
set.seed(202493)
indices <- createDataPartition(dados$Class, p=0.8, list=F)
treino <- dados[indices, ]
teste <- dados[-indices,]
set.seed(202493)
rna <- train(Class ~ ., data=treino, method="nnet", trace=Formaldehyde)
rna <- train(Class ~ ., data=treino, method="nnet", trace=F)
rna
predicoes.rna <- predict(rna, teste)
confusionMatrix(predicoes.rna, teste$Class)
confusionMatrix(predicoes.rna, as.factor(teste$Class))
ctrl <- trainControl(method="cv", number=10)
set.seed(202493)
rna <- train(Class ~ ., data=treino, method="nnet", trace=F, trControl=ctrl)
rna
predict.rna <- predict(rna, teste)
confusionMatrix(predict.rna, teste)
confusionMatrix(predict.rna, as.factor(teste$Class))
grid <- expand.grid(size = seq(from=1, to=45, by=10), decay=seq(from=0.1, to=0.9, by=0.3))
set.seed(202493)
rna <- train(form=Class ~ ., data=treino, method="nnet", tuneGrid=grid, trControl=ctrl, maxit=2000, trace=F)
rna
predict.rna <- predict(rna, teste)
confusionMatrix(predict.rna, as.factor(test$Class))
confusionMatrix(predict.rna, as.factor(teste$Class))
dados_novos_casos <- read.csv("1-cancer-de-mama-dados-novos-casos.csv")
View(dados_novos_casos)
dados_novos_casos$Id <- NULL
predict.rna <- predict(rna, dados_novos_casos)
dados_novos_casos$Class <- NULL
resultado <- cbind(dados_novos_casos, predict.rna)
View(resultado)
names(resultado)
resultados[names(resultado) = "predict.rna"]
names(resultado)[names(resultado) == "predict.rna"] <- "Class"
setwd("/Users/cassi/dev/_estudos/pos-iaa/IAA008-aprendizado-maquina/bases-de-dados/02-volume")
getwd()
dados <- read.csv("2-volume-dados.csv")
View(dados)
set.seed(202493)
indices <- createDataPartition(dados$Volume, p=0.8, list=F)
treino <- dados[indices,]
teste <- dados[-indices,]
set.seed(202493)
rna <- train(Volume ~ ., data=treino, method="nnet", linout=T, trace=FALSE)
rna
predict.rna <- predict(rna, teste)
install.packages("Metrics")
library(Metrics)
rmse(teste$Volume, predict.rna)
r2 <- function(predito, observado) {}
r2 <- function(predito, observado) {
return (1 - (sum((predito - observado) ^ 2) / sum((observado - mean(observado)) ^2)))
}
r2(predict.rna, teste$Volume)
control <- trainControl(method="cv", number=10)
tuneGrid <- expand.grid(size=seq(from=1, to=10, by=1), decay=seq(from=0.1, to=0.1, by=0.1))
set.seed(202493)
rna <- train(Volume ~ ., data=treino, method="nnet", trainControl=control, tuneGrid=tuneGrid, linout=T, MaxNWts=10000, maxit=2000, trace=Formaldehyde)
rna <- train(Volume ~ ., data=treino, method="nnet", trainControl=control, tuneGrid=tuneGrid, linout=T, MaxNWts=10000, maxit=2000, trace=F)
predicoes.rna <- predict(rna, teste)
rmse(teste$Volume, predicoes.rna)
r2(predicoes.rna, teste$Volume)
novos_dados <- read.csv("2-volume-dados-novos-casos.csv")
View(novos_dados)
novos_dados$Class <- NULL
novos_dados$Volume <- NULL
predicoes.rna <- predict(rna, novos_dados)
resultado <- cbind(dados_novos_casos, predicoes.rna)
View(resultado)
resultado <- cbind(novos_dados, predicoes.rna)
names(resultado)[names(resultado) == "predicoes.rna"] <- "Volume"
setwd("/Users/cassi/dev/_estudos/pos-iaa/IAA008-aprendizado-maquina/bases-de-dados/03-alunos")
dados <- read.csv("3-alunos-dados")
dados <- read.csv("3-alunos-dados.csv")
View(dados)
set.seed(202493)
indices <- createDataPartition(dados$G3, p=0.8, list=F)
treino <- dados[indices,]
teste <- dados[-indices,]
set.seed(202493)
rna <- train(G3 ~., data=treino, method="nnet", linout=T, trace=F)
rna
predicoes.rna <- predict(rna, teste)
rmse(teste$G3, predicoes.rna)
r2(predicoes.rna, teste$G3)
control <- trainControl(method="cv", number=10)
tuneGrid <- expand.grid(size=seq(from=1, to=3=10, by=1), decay=seq(from=0.1, to=0.9, by=0.2))
tuneGrid <- expand.grid(size=seq(from=1, to=10, by=1), decay=seq(from=0.1, to=0.9, by=0.2))
set.seed(202493)
rna <- train(G3 ~ ., data=treino, method="nnet", linout=T, tuneGrid=tuneGrid, trainControl=control, trace=F)
rna <- train(G3 ~ ., data=treino, method="nnet", linout=T, tuneGrid=tuneGrid, trainControl=control, trace=F, MaxNWts=10000, maxit=2000)
rna
predict.rna <- predict(rna, teste)
rmse(teste$G3, predict.rna)
r2(predict.rna, teste$G3)
novos_dados <- read.csv("3-alunos-novos-casos.csv")
View(novos_dados)
novos_dados$G3 <- NULL
predict.rna <- predict(rna, novos_dados)
resultado <- cbind(novos_dados, predict.rna)
names(resultado)[names(resultado) == "predict.rna"] <- "G3"
View(resultado)
setwd("/Users/cassi/dev/_estudos/pos-iaa/IAA008-aprendizado-maquina/bases-de-dados/04-banco")
dados <- read.csv("4-banco-dados.csv")
View(dados)
set.seed(202493)
indices <- createDataPartition(dados$y, p=0.8, list=F)
treino <- dados[indices,]
teste <- dados[-indices,]
set.seed(202493)
rna <- train(y ~ ., data=treino, method="nnet", trace=F)
rna
predicoes.rna <- predict(rna, teste)
confusionMatrix(predicoes.rna, as.factor(teste$y))
ctrl <- trainControl(method="cv", number=10)
set.seed(202493)
rna <- train(y ~ ., data=treino, method="nnet", trace=F, trainControl=ctrl)
rna
predicoes.rna <- predict(rna, teste)
confusionMatrix(predicoes.rna, as.factor(teste$y))
rna <- train(y ~ ., data=treino, method="nnet", trace=F, trControl=ctrl)
rna
predicoes.rna <- predict(rna, teste)
confusionMatrix(predicoes.rna, as.factor(teste$y))
grid <- expand.grid(size = seq(from=1, to=35, by=5), decay=seq(from=0.1, to=0.9, by=0.2))
set.seed(202493)
rna <- train(y ~ ., data=treino, method="nnet", tuneGrid=grid, trControl=ctrl, maxit=2000, trace=F)
predicoes.rna <- predict(rna, teste)
confusionMatrix(predicoes.rna, as.factor(teste$y))
rna
novos_dados <- read.csv("4-bancos-dados-novos-casos.csv")
getwd()
novos_dados <- read.csv("4-banco-dados-novos-casos.csv")
View(novos_dados)
novos_dados$y <- NULL
predicoes.rna <- predict(rna, novos_dados)
resultado <- cbind(novos_dados, predicoes.rna)
names(resultado)[names(resultado) == "predicoes.rna"] <- "y"
View(resultado)
